
<% layout('layout/page') -%>
<% block('title', 'Hello'); -%>

<div class="menuPanel">
	<button type="button" class="btn" >
		<i class="icon-delete"></i>
	</button>
	<button type="button" class="btn" onclick="">
		<i class="icon-copy"></i>
	</button>
	<button type="button" class="btn" onclick="">
		<i class="icon-move"></i>
	</button>
</div>

<!-- tree -->
<div id="parentTreePages" style="border: 1px solid gray; border-width: 1px 0 1px 0; height: 400px; overflow: auto;">
    
    <div style="float: left; width: 50%; border-right: 1px solid gray;">
    <ul id="treePages" class="filetree treeview"></ul>
    </div>
    <div style="float: left; width: 40%;">
    <ul id="treePages2" class="filetree treeview">
	</ul>
    </div>
	
</div>

<script type="text/javascript">
	var treeObj =<%-JSON.stringify(treeJson)%>;
	var treeObj2 =<%-JSON.stringify(treeJson)%>;
	function PageDropTarget(element) {
		tabaga.DropTarget.apply(this, arguments);
    }
	
	// наследование таким образом не работает в IE8
	// (можно использовать собственную универсальную функцию)
	// переопределим tabaga.DropTarget
	PageDropTarget.prototype = Object.create(tabaga.DropTarget.prototype);
	// переопределить accept
	PageDropTarget.prototype.accept = function(dragObject) {
		console.log("DropTarget: " + this + " accept DragObject: " + dragObject + " state: " + this.state);
		tabaga.DropTarget.prototype.accept.apply(this, arguments);
	};
	
	// переопределить TreeControl
	function PageTreeControl() {
		tabaga.TreeControl.apply(this, arguments);
    }
	// переопределим tabaga.PopupMenu
	function PageNodeContextMenu() {
		tabaga.PopupMenu.apply(this, arguments);
    }
	
	function createSimpleTextContextMenu(menuItems) {
		var ulContainer = document.createElement("ul");
		ulContainer.className = "simpleContextMenu";
		for (var i = 0; i < menuItems.length; i++) {
			var menuItem = menuItems[i];
			
			var itemLi = document.createElement("li");
			ulContainer.appendChild(itemLi);
			var itemSpan = document.createElement("span")
			itemSpan.innerHTML = menuItem.title;
			itemLi.appendChild(itemSpan);
			
			itemLi.onclick = menuItem.clickAction;
		}
		return ulContainer;
	} 
	
	PageNodeContextMenu.prototype = Object.create(tabaga.PopupMenu.prototype);
	PageNodeContextMenu.prototype.onCreate = function(containerMenu) {
		console.log("Create menu under container: " + containerMenu);
		
		var nodeLi = this.element;
		var treeControl = nodeLi.treeControl;
		treeControl.setSelectionTreeNode(nodeLi);
		
		var ulContainer = createSimpleTextContextMenu([{title: "Delete", onclickAction: function(e) {}},
		                             {title: "Move", onclickAction: function(e) {}},
		                             {title: "Copy", onclickAction: function(e) {}}]);
		
		//ulContainer.setAttribute("style", "display: none");
		containerMenu.appendChild(ulContainer);
	};
	
	PageTreeControl.prototype = Object.create(tabaga.TreeControl.prototype);
	PageTreeControl.prototype.appendNewNode = function(parentUl, newNode) {
		var newNodeLi = tabaga.TreeControl.prototype.appendNewNode.apply(this, arguments);
		
		tabaga.popupMaster.makeContextable(newNodeLi);
		var menu = new PageNodeContextMenu(newNodeLi, jQuery("#parentTreePages")[0]);
		
		newNodeLi.onclick = function(event) {
	    	console.log("Onclick node: " + this);
	    	// call default onclick
	    	return tabaga.onClickTreeNode.apply(this, arguments);
	    }
		
        var dragObject = new tabaga.DragObject(newNodeLi.nodeSpan);
        dragObject.setScrollManager(new tabaga.DragScrollManager(jQuery("#parentTreePages")[0]));
		new PageDropTarget(newNodeLi.nodeSpan);
		tabaga.dragMaster.makeDraggable(newNodeLi.nodeSpan);
	};
	
	var config = {
		TreeControlConstructor: PageTreeControl,
		loadTreeScopeNodes: function(nodeId, setClosed, tree, successCallback) {
			megion.showLoadingStatus(true);
			$.ajax({
				url : "pages/pageTreeScope",
				dataType : "json",
				data : {
					"nodeId" : nodeId
				},
				success : function(loadedData) {
					successCallback(nodeId, setClosed, loadedData);
					megion.showLoadingStatus(false);
				}
			});
	    },
	    loadChildNodes: function(nodeId, tree, successCallback) {
			megion.showLoadingStatus(true);
			$.ajax({
				url : "pages/page",
				dataType : "json",
				data : {
					"nodeId" : nodeId
				},
				success : function(loadedData) {
					// loaded data is array
					successCallback(nodeId, loadedData[0]);
					megion.showLoadingStatus(false);
				}
			});
	    },
	    dragAndDrop: {
	    	scrollContainer: jQuery("#parentTreePages")[0],
	    	DropTargetConstructor: PageDropTarget
	    }
	}
	
	jQuery("#treePages").createTreeControl("1", config, treeObj);
	var tree2 = jQuery("#treePages2").createTreeControl("2", config, treeObj2);
	//tabaga.enableHistoryControl(tree2, false);
	
</script>


<% layout('layout/page') -%>
<% block('title', 'Hello'); -%>

<div class="menuPanel">
	<button type="button" class="btn" >
		<i class="icon-delete"></i>
	</button>
	<button type="button" class="btn" onclick="(jQuery('#treePages')[0]).treeControl.makeAllDraggable();">
		<i class="icon-copy"></i>
	</button>
	<button type="button" class="btn" onclick="(jQuery('#treePages')[0]).treeControl.makeAllDraggable();">
		<i class="icon-move"></i>
	</button>
</div>

<!-- tree -->
<div id="parentTreePages" style="border: 1px solid gray; height: 400px; overflow: auto;">

    <table style="width: 100%" border="1">
    <tbody>
    <tr>
    <td width="50%" valign="top">
    <ul id="treePages" class="filetree treeview">
	</ul>
    </td>
    
    <td width="50%" valign="top">
    <ul id="treePages2" class="filetree treeview">
	</ul>
    </td>
    
    </tr>
    </tbody>
    </table>
	
</div>

<script type="text/javascript">
	var treeObj =<%-JSON.stringify(treeJson)%>;
	var treeObj2 =<%-JSON.stringify(treeJson)%>;
	function PageDropTarget(nodeSpan) {
		tabaga.DropTarget.apply(this, arguments);
    }
	
	// наследование таким образом не работает в IE8
	// (можно использовать собственную универсальную функцию)
	// переопределим tabaga.DropTarget
	PageDropTarget.prototype = Object.create(tabaga.DropTarget.prototype);
	// переопределить accept
	PageDropTarget.prototype.accept = function(dragObject) {
		console.log("DropTarget: " + this + " accept DragObject: " + dragObject + " state: " + this.state);
		tabaga.DropTarget.prototype.accept.apply(this, arguments);
		
		(jQuery('#treePages')[0]).treeControl.makeAllUnDraggable();
	};
	
	// переопределить TreeControl
	function PageTreeControl() {
		tabaga.TreeControl.apply(this, arguments);
    }
	PageTreeControl.prototype = Object.create(tabaga.TreeControl.prototype);
	PageTreeControl.prototype.appendNewNode = function(parentUl, newNode) {
		var newNodeLi = tabaga.TreeControl.prototype.appendNewNode.apply(this, arguments);
		newNodeLi.oncontextmenu = function(event) {
	    	console.log("Open node context menu: " + this);
	    	tabaga.stopEventPropagation(event);
	    	return false;
	    }
		newNodeLi.onclick = function(event) {
	    	console.log("Onclick node: " + this);
	    	// call default onclick
	    	return tabaga.onClickTreeControlNodeLi.apply(this, arguments);
	    }
	};
	
	var config = {
		TreeControlConstructor: PageTreeControl,
		loadTreeScopeNodes: function(nodeId, setClosed, tree, successCallback) {
			megion.showLoadingStatus(true);
			$.ajax({
				url : "pages/pageTreeScope",
				dataType : "json",
				data : {
					"nodeId" : nodeId
				},
				success : function(loadedData) {
					successCallback(nodeId, setClosed, loadedData);
					megion.showLoadingStatus(false);
				}
			});
	    },
	    loadChildNodes: function(nodeId, tree, successCallback) {
			megion.showLoadingStatus(true);
			$.ajax({
				url : "pages/page",
				dataType : "json",
				data : {
					"nodeId" : nodeId
				},
				success : function(loadedData) {
					// loaded data is array
					successCallback(nodeId, loadedData[0]);
					megion.showLoadingStatus(false);
				}
			});
	    },
	    dragAndDrop: {
	    	scrollContainer: jQuery("#parentTreePages")[0],
	    	DropTargetConstructor: PageDropTarget
	    }
	}
	
	jQuery("#treePages").createTreeControl("1", config, treeObj);
	jQuery("#treePages2").createTreeControl("2", config, treeObj2);
	
</script>
